apiVersion: template.openshift.io/v1
kind: Template
labels:
  template: automated-actions
metadata:
  name: automated-actions
  annotations:
    description: automated-actions
objects:
# ------- API DEPLOYMENT --------------------
- apiVersion: policy/v1
  kind: PodDisruptionBudget
  metadata:
    name: automated-actions-api
  spec:
    minAvailable: 1
    selector:
      matchLabels:
        app.kubernetes.io/component: api

- apiVersion: v1
  kind: ServiceAccount
  imagePullSecrets: "${{IMAGE_PULL_SECRETS}}"
  metadata:
    name: automated-actions-api
    labels:
      app.kubernetes.io/component: api
      app.kubernetes.io/name: automated-actions

- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      ignore-check.kube-linter.io/unset-cpu-requirements: "no cpu limits"
    labels:
      app.kubernetes.io/component: api
      app.kubernetes.io/name: automated-actions
    name: automated-actions
  spec:
    replicas: ${{AA_API_REPLICAS}}
    selector:
      matchLabels:
        app.kubernetes.io/component: api
        app.kubernetes.io/name: automated-actions
    template:
      metadata:
        labels:
          app.kubernetes.io/component: api
          app.kubernetes.io/name: automated-actions
      spec:
        restartPolicy: Always
        serviceAccountName: automated-actions-api
        affinity:
          podAntiAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/component
                  operator: In
                  values:
                  - api
              topologyKey: "kubernetes.io/hostname"
        containers:
        - env:
          - name: AA_START_MODE
            value: api
          - name: AA_APP_PORT
            value: "${AA_APP_PORT}"
          envFrom:
            - secretRef:
                name: automated-actions-secret
                optional: true
            - configMapRef:
                name: automated-actions-config
                optional: true
          image: "${IMAGE}:${IMAGE_TAG}"
          name: web
          ports:
          - containerPort: ${{AA_APP_PORT}}
          lifecycle:
            preStop:
              exec:
                command:
                  - sh
                  - "-c"
                  - sleep 5
          readinessProbe:
            httpGet:
              path: /healthz
              port: ${{AA_APP_PORT}}
            periodSeconds: 15
            timeoutSeconds: 5
          startupProbe:
            tcpSocket:
              port: ${{AA_APP_PORT}}
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 5
          livenessProbe:
            tcpSocket:
              port: ${{AA_APP_PORT}}
            periodSeconds: 30
            timeoutSeconds: 5
          resources:
            requests:
              cpu: ${{AA_API_CPU_REQUESTS}}
              memory: ${{AA_API_MEMORY_REQUESTS}}
            limits:
              memory: ${{AA_API_MEMORY_LIMITS}}
          volumeMounts:
            - name: policy-volume
              mountPath: /data
              readOnly: true
      volumes:
        - name: policy-volume
          configMap:
            name: automated-actions-policy

# ---------- API SERVICE -----------
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app.kubernetes.io/component: api
      app.kubernetes.io/name: automated-actions
    name: automated-actions
  spec:
    ports:
    - name: "8000"
      port: ${{AA_APP_PORT}}
      targetPort: ${{AA_APP_PORT}}
    selector:
      app.kubernetes.io/component: api
      app.kubernetes.io/name: automated-actions

# --------- WORKER DEPLOYMENT --------------
- apiVersion: policy/v1
  kind: PodDisruptionBudget
  metadata:
    name: automated-actions-worker
  spec:
    minAvailable: 1
    selector:
      matchLabels:
        app.kubernetes.io/component: worker

- apiVersion: v1
  kind: ServiceAccount
  imagePullSecrets: "${{IMAGE_PULL_SECRETS}}"
  metadata:
    name: automated-actions-worker
    labels:
      app.kubernetes.io/component: worker
      app.kubernetes.io/name: automated-actions

- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      ignore-check.kube-linter.io/unset-cpu-requirements: "no cpu limits"
    labels:
      app.kubernetes.io/component: worker
      app.kubernetes.io/name: automated-actions
    name: automated-actions-worker
  spec:
    replicas: ${{AA_WORKER_REPLICAS}}
    selector:
      matchLabels:
        app.kubernetes.io/component: worker
        app.kubernetes.io/name: automated-actions
    template:
      metadata:
        labels:
          app.kubernetes.io/component: worker
          app.kubernetes.io/name: automated-actions
      spec:
        restartPolicy: Always
        serviceAccountName: automated-actions-worker
        affinity:
          podAntiAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/component
                  operator: In
                  values:
                  - worker
              topologyKey: "kubernetes.io/hostname"
        containers:
        - env:
          - name: AA_START_MODE
            value: worker
          - name: AA_WORKER_METRICS_PORT
            value: "${AA_WORKER_METRICS_PORT}"
          envFrom:
            - secretRef:
                name: automated-actions-secret
                optional: true
            - configMapRef:
                name: automated-actions-config
                optional: true
          image: "${IMAGE}:${IMAGE_TAG}"
          name: worker
          ports:
          - containerPort: ${{AA_WORKER_METRICS_PORT}}
          readinessProbe:
            httpGet:
              path: /metrics
              port: ${{AA_WORKER_METRICS_PORT}}
            periodSeconds: 15
            timeoutSeconds: 5
          startupProbe:
            tcpSocket:
              port: ${{AA_WORKER_METRICS_PORT}}
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 5
          livenessProbe:
            tcpSocket:
              port: ${{AA_WORKER_METRICS_PORT}}
            periodSeconds: 30
            timeoutSeconds: 5
          resources:
            requests:
              cpu: ${{AA_WORKER_CPU_REQUESTS}}
              memory: ${{AA_WORKER_MEMORY_REQUESTS}}
            limits:
              memory: ${{AA_WORKER_MEMORY_LIMITS}}

# ---------- WORKER SERVICE (PROMETHEUS) -----------
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app.kubernetes.io/component: worker
      app.kubernetes.io/name: automated-actions
    name: automated-actions-worker
  spec:
    ports:
    - name: "8000"
      port: ${{AA_WORKER_METRICS_PORT}}
      targetPort: ${{AA_WORKER_METRICS_PORT}}
    selector:
      app.kubernetes.io/component: worker
      app.kubernetes.io/name: automated-actions

# ---------- Open Policy Agent (OPA) DEPLOYMENT --------------
- apiVersion: policy/v1
  kind: PodDisruptionBudget
  metadata:
    name: opa
  spec:
    minAvailable: 1
    selector:
      matchLabels:
        app.kubernetes.io/component: opa

- apiVersion: v1
  kind: ServiceAccount
  imagePullSecrets: "${{IMAGE_PULL_SECRETS}}"
  metadata:
    name: opa
    labels:
      app.kubernetes.io/component: opa
      app.kubernetes.io/name: automated-actions

- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      ignore-check.kube-linter.io/unset-cpu-requirements: "no cpu limits"
    labels:
      app.kubernetes.io/component: opa
      app.kubernetes.io/name: automated-actions
    name: opa
  spec:
    replicas: ${{AA_OPA_REPLICAS}}
    selector:
      matchLabels:
        app.kubernetes.io/component: opa
        app.kubernetes.io/name: automated-actions
    template:
      metadata:
        labels:
          app.kubernetes.io/component: opa
          app.kubernetes.io/name: automated-actions
      spec:
        restartPolicy: Always
        serviceAccountName: opa
        affinity:
          podAntiAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/component
                  operator: In
                  values:
                  - opa
              topologyKey: "kubernetes.io/hostname"
        containers:
        - name: opa
          image: "${OPA_IMAGE}:${IMAGE_TAG}"
          args:
          - run
          - --ignore=.*
          - --server
          - --log-level=info
          - --disable-telemetry
          - --addr=0.0.0.0:${{AA_OPA_PORT}}
          - /authz        # rego policy and default roles
          - /policies     # app-interface roles
          ports:
          - name: http
            containerPort: ${{AA_OPA_PORT}}
          lifecycle:
            preStop:
              exec:
                command:
                  - sh
                  - "-c"
                  - sleep 2
          livenessProbe:
            httpGet:
              path: /health
              scheme: HTTP
              port: ${{AA_OPA_PORT}}
            initialDelaySeconds: 5
            periodSeconds: 5
          readinessProbe:
            httpGet:
              path: /health?bundle=true  # Include bundle activation in readiness
              scheme: HTTP
              port: ${{AA_OPA_PORT}}
            initialDelaySeconds: 5
            periodSeconds: 5
          startupProbe:
            tcpSocket:
              port: ${{AA_OPA_PORT}}
            initialDelaySeconds: 1
            periodSeconds: 5
            timeoutSeconds: 5
          resources:
            requests:
              cpu: ${{AA_OPA_CPU_REQUESTS}}
              memory: ${{AA_OPA_MEMORY_REQUESTS}}
            limits:
              memory: ${{AA_OPA_MEMORY_LIMITS}}
          volumeMounts:
            - name: policy-volume
              mountPath: /policies
              readOnly: true
      volumes:
        - name: policy-volume
          configMap:
            name: automated-actions-policy

# ---------- Open Policy Agent (OPA) SERVICE --------------
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app.kubernetes.io/component: opa
      app.kubernetes.io/name: automated-actions
    name: opa
  spec:
    ports:
    - name: http
      port: ${{AA_OPA_PORT}}
      targetPort: ${{AA_OPA_PORT}}
    selector:
      app.kubernetes.io/component: opa
      app.kubernetes.io/name: automated-actions

parameters:
# Global config
- name: IMAGE
  description: Image to use for automated-actions
  value: "quay.io/redhat-services-prod/app-sre-tenant/automated-actions-main/automated-actions-main"
  required: true

- name: OPA_IMAGE
  description: Image to use for OPA
  value: "quay.io/redhat-services-prod/app-sre-tenant/automated-actions-main/opa-main"
  required: true

- name: IMAGE_PULL_SECRETS
  description: Pull secrets to use for automated-actions images
  value: '[]'
  required: false

- name: IMAGE_TAG
  description: automated-actions version
  value: "latest"
  required: true

# Api config
- name: AA_APP_PORT
  description: Port to expose the api app on
  value: "8080"
  required: true

## Api Pod limits
- name: AA_API_REPLICAS
  description: Web replicas
  value: "3"
  required: true

- name: AA_API_MEMORY_REQUESTS
  description: Web memory requests
  value: "200Mi"
  required: true

- name: AA_API_MEMORY_LIMITS
  description: Web memory limits
  value: "200Mi"
  required: true

- name: AA_API_CPU_REQUESTS
  description: Web cpu requests
  value: "100m"
  required: true

# Worker config
- name: AA_WORKER_METRICS_PORT
  description: Port to expose the web app on
  value: "8000"
  required: true

## Worker Pod limits
- name: AA_WORKER_REPLICAS
  description: Worker replicas
  value: "3"
  required: true

- name: AA_WORKER_MEMORY_REQUESTS
  description: Worker memory requests
  value: "200Mi"
  required: true

- name: AA_WORKER_MEMORY_LIMITS
  description: Worker memory limits
  value: "200Mi"
  required: true

- name: AA_WORKER_CPU_REQUESTS
  description: Worker cpu requests
  value: "100m"
  required: true

# OPA config
- name: AA_OPA_PORT
  description: Port to expose the OPA app on
  value: "8181"
  required: true

## OPA Pod limits
- name: AA_OPA_REPLICAS
  description: OPA replicas
  value: "3"
  required: true

- name: AA_OPA_MEMORY_REQUESTS
  description: OPA memory requests
  value: "50Mi"
  required: true

- name: AA_OPA_MEMORY_LIMITS
  description: OPA memory limits
  value: "100Mi"
  required: true

- name: AA_OPA_CPU_REQUESTS
  description: OPA cpu requests
  value: "100m"
  required: true
