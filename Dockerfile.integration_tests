#
# Base image with defaults for all stages
FROM registry.access.redhat.com/ubi9/ubi-minimal@sha256:e1c4703364c5cb58f5462575dc90345bcd934ddc45e6c32f9c162f2b5617681c AS base
COPY --from=ghcr.io/astral-sh/uv:0.7.3@sha256:87a04222b228501907f487b338ca6fc1514a93369bfce6930eb06c8d576e58a4 /uv /bin/uv

COPY LICENSE /licenses/

ENV APP_ROOT=/opt/app-root
ENV \
    # use venv from ubi image
    UV_PROJECT_ENVIRONMENT=${APP_ROOT} \
    # compile bytecode for faster startup
    UV_COMPILE_BYTECODE="true" \
    # disable uv cache. it doesn't make sense in a container
    UV_NO_CACHE=true \
    BASH_ENV="${APP_ROOT}/bin/activate" \
    ENV="${APP_ROOT}/bin/activate" \
    PROMPT_COMMAND=". ${APP_ROOT}/bin/activate"

# Install base dependencies
RUN microdnf install -y python3.12 make && microdnf clean all
USER 1001
WORKDIR ${APP_ROOT}/src


#
# Builder image
#
FROM registry.access.redhat.com/ubi9/python-312@sha256:6779499e4e43ac7a24c3e7ec5e312dc1b36879209244ed387640046ec9df7712 AS builder
COPY --from=ghcr.io/astral-sh/uv:0.7.3@sha256:87a04222b228501907f487b338ca6fc1514a93369bfce6930eb06c8d576e58a4 /uv /bin/uv

ENV \
    # use venv from ubi image
    UV_PROJECT_ENVIRONMENT=${APP_ROOT} \
    # compile bytecode for faster startup
    UV_COMPILE_BYTECODE="true" \
    # disable uv cache. it doesn't make sense in a container
    UV_NO_CACHE=true

COPY --chown=1001:0 pyproject.toml uv.lock ./
# automated_actions_client is a dependency of automated_actions_cli
COPY --chown=1001:0 packages/automated_actions_client ./packages/automated_actions_client
COPY packages/automated_actions_cli ./packages/automated_actions_cli

COPY packages/integration_tests/ ./packages/integration_tests/
RUN cd ./packages/integration_tests/ && uv sync


#
# Test image
#
FROM base AS test

COPY --from=builder --chown=1001:0 /opt/app-root /opt/app-root
COPY packages/integration_tests/Makefile ./packages/integration_tests/
RUN make -C packages/integration_tests test


#
# Production image
#
FROM base AS prod
COPY --from=builder --chown=1001:0 /opt/app-root /opt/app-root

WORKDIR ${APP_ROOT}/src/packages/integration_tests
ENTRYPOINT [ "uv", "run", "pytest", "tests" ]
