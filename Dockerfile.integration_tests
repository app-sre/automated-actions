#
# Base image with defaults for all stages
FROM registry.access.redhat.com/ubi9-minimal@sha256:21ed5a01130d3a77eb4a26a80de70a4433860255b394e95dc2c26817de1da061 AS base
COPY --from=ghcr.io/astral-sh/uv:0.7.3@sha256:87a04222b228501907f487b338ca6fc1514a93369bfce6930eb06c8d576e58a4 /uv /bin/uv

COPY LICENSE /licenses/

ENV APP_ROOT=/opt/app-root
ENV \
    # use venv from ubi image
    UV_PROJECT_ENVIRONMENT=${APP_ROOT} \
    # compile bytecode for faster startup
    UV_COMPILE_BYTECODE="true" \
    # disable uv cache. it doesn't make sense in a container
    UV_NO_CACHE=true \
    BASH_ENV="${APP_ROOT}/bin/activate" \
    ENV="${APP_ROOT}/bin/activate" \
    PROMPT_COMMAND=". ${APP_ROOT}/bin/activate"

# Install base dependencies
RUN microdnf install -y python3.12 make findutils && microdnf clean all
WORKDIR ${APP_ROOT}/src


#
# Builder image
#
FROM registry.access.redhat.com/ubi9/python-312@sha256:aa2a3c086013ce259af562ddc64c5aa55471c42a2a8a731f185767e86a94283b AS builder
COPY --from=ghcr.io/astral-sh/uv:0.7.3@sha256:87a04222b228501907f487b338ca6fc1514a93369bfce6930eb06c8d576e58a4 /uv /bin/uv

ENV \
    # use venv from ubi image
    UV_PROJECT_ENVIRONMENT=${APP_ROOT} \
    # compile bytecode for faster startup
    UV_COMPILE_BYTECODE="true" \
    # disable uv cache. it doesn't make sense in a container
    UV_NO_CACHE=true

# I don't want to mess with permission issues in the builder image. We use a non-root user in the final images
USER 0

COPY pyproject.toml uv.lock ./
# automated_actions_client is a dependency of automated_actions_cli
COPY packages/automated_actions_client ./packages/automated_actions_client
COPY packages/automated_actions_cli ./packages/automated_actions_cli

COPY packages/integration_tests/ ./packages/integration_tests/
RUN cd ./packages/integration_tests/ && uv sync


#
# Test image
#
FROM base AS test

COPY --from=builder /opt/app-root /opt/app-root
COPY packages/integration_tests/Makefile ./packages/integration_tests/

RUN find ${APP_ROOT} -type d -exec chmod 777 {} \;
USER 1001

RUN make -C packages/integration_tests test


#
# Production image
#
FROM base AS prod
COPY --from=builder /opt/app-root /opt/app-root

RUN find ${APP_ROOT} -type d -exec chmod 777 {} \;
USER 1001

WORKDIR ${APP_ROOT}/src/packages/integration_tests
ENTRYPOINT [ "uv", "run", "pytest", "tests" ]
